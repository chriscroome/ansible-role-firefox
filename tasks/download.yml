# Copyright 2022-2023 Chris Croome
#
# This file is part of the Webarchitects Firefox Ansible role.
#
# The Webarchitects Firefox Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Firefox Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Firefox Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Download and install Firefox
  block:

    - name: "Directory for downloads for {{ edition.name }} present"
      ansible.builtin.file:
        path: "{{ firefox_download }}/{{ edition.product }}"
        state: directory
        mode: 0700
        owner: root
        group: root

    - name: "Check URL for {{ edition.name }}"
      ansible.builtin.uri:
        url: "https://download.mozilla.org/?product={{ edition.product }}&os={{ firefox_arch[ansible_architecture] }}&lang={{ firefox_lang }}"
        method: HEAD
        status_code: 302
        follow_redirects: none
      check_mode: false
      changed_when: false
      register: firefox_head

    - name: "Debug HEAD request for URL for {{ edition.name }}"
      ansible.builtin.debug:
        var: firefox_head
        verbosity: 2

    - name: "Download {{ edition.name }} GPG signature"
      ansible.builtin.get_url:
        url: "{{ firefox_head.location }}.asc"
        dest: "{{ firefox_download }}/{{ edition.product }}/{{ firefox_head.location | basename }}.asc"
        mode: 0644
        owner: root
        group: root
      register: firefox_download_gpg_signature

    - name: "Download, check unarchive and install {{ edition.name }}"
      block:

        - name: "Download {{ edition.name }}"
          ansible.builtin.get_url:
            url: "{{ firefox_head.location }}"
            dest: "{{ firefox_download }}/{{ edition.product }}/{{ firefox_head.location | basename }}"
            mode: 0644
            owner: root
            group: root

        - name: "Check the {{ edition.name }} GPG signature"
          ansible.builtin.command: >
            gpg --no-tty --verify --logger-fd 1
            {{ firefox_download }}/{{ edition.product }}/{{ firefox_head.location | basename }}.asc
            {{ firefox_download }}/{{ edition.product }}/{{ firefox_head.location | basename }}
          check_mode: false
          changed_when: false
          register: firefox_gpg_verify
          failed_when: >-
            (firefox_gpg_verify.rc != 0) or
            ("Good signature from" not in firefox_gpg_verify.stdout)

        - name: "Debug {{ edition.name }} GPG verify result"
          ansible.builtin.debug:
            var: firefox_gpg_verify
            verbosity: 2

        - name: "Directory present to unarchive {{ edition.name }} into present"
          ansible.builtin.file:
            path: "{{ firefox_download }}/{{ edition.product }}/{{ firefox_latest }}"
            state: directory
            mode: 0700
            owner: root
            group: root

        - name: "Unarchive {{ edition.name }}"
          ansible.builtin.unarchive:
            src: "{{ firefox_download }}/{{ edition.product }}/{{ firefox_head.location | basename }}"
            dest: "{{ firefox_download }}/{{ edition.product }}/{{ firefox_latest }}"
            remote_src: true
            owner: root
            group: root

        - name: "Check if {{ edition.name }} has already been installed"
          ansible.builtin.stat:
            path: "{{ firefox_path }}/{{ edition.path }}"
          register: firefox_dest

        - name: "Delete the old {{ edition.name }} and move the new version in place"
          ansible.builtin.shell: |
            set -e -o pipefail
            rm -rf {{ firefox_path }}/{{ edition.path }}
            mv {{ firefox_download }}/{{ edition.product }}/{{ firefox_latest }}/firefox {{ firefox_path }}/{{ edition.path }}
          args:
            executable: "{{ firefox_bash.stdout }}"
          when: firefox_dest.stat.exists | bool

        - name: "{{ edition.name }} in place"
          ansible.builtin.shell: |
            set -e -o pipefail
            mv {{ firefox_download }}/{{ edition.product }}/{{ firefox_latest }}/firefox {{ firefox_path }}/{{ edition.path }}
          args:
            executable: "{{ firefox_bash.stdout }}"
          register: firefox_in_place
          when: not firefox_dest.stat.exists | bool

        - name: Update the CHANGELOG message
          block:

            - name: "Append a CHANGELOG message to say that {{ edition.name }} has been updated to the latest version for Ansible < 2.13.0"
              ansible.builtin.set_fact:
                firefox_changelog: "{{ firefox_changelog }} + ['{{ firefox_changelog_msg }}']"
              when: ansible_version.full is version('2.13.0', '<')

            - name: "Append a CHANGELOG message to say that {{ edition.name }} has been updated to the latest version for Ansible >= 2.13.0"
              ansible.builtin.set_fact:
                firefox_changelog: "{{ firefox_changelog + [firefox_changelog_msg] }}"
              when: ansible_version.full is version('2.13.0', '>=')

          vars:
            firefox_changelog_msg: "{{ edition.name }} {{ firefox_latest }} has been installed."

        - name: "{{ edition.name }} script in place"
          ansible.builtin.template:
            src: firefox.sh.j2
            dest: "{{ firefox_bin }}/{{ edition.script }}"
            mode: 0755
            owner: root
            group: root

        - name: "{{ edition.name }} desktop file in place"
          ansible.builtin.template:
            src: firefox.desktop.j2
            dest: "/usr/share/applications/{{ edition.product }}.desktop"
            mode: 0644
            owner: root
            group: root

      when: firefox_download_gpg_signature.changed | bool

  tags:
    - firefox
...
