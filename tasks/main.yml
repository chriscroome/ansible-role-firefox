# Copyright 2022-2023 Chris Croome
#
# This file is part of the Webarchitects Firefox Ansible role.
#
# The Webarchitects Firefox Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Firefox Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Firefox Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Skip the tasks in this role as firefox is false
  ansible.builtin.debug:
    msg: "The firefox variable need to be true for the tasks in this role to run."
  when: not firefox | bool
  tags:
    - firefox

- name: Install and upgrade Firefox
  block:

    - name: Validate Firefox variables
      ansible.builtin.include_tasks: validate.yml
      when: firefox_validate | bool

    - name: Check that Firefox Nightly is not to be installed via a binary and a .deb package at the same time
      ansible.builtin.assert:
        that:
          - ( "FIREFOX_NIGHTLY" not in firefox_editions | community.general.json_query('[].version') )
          - ( "Firefox Nightly" not in firefox_editions | community.general.json_query('[].name') )
          - ( "desktop_nightly" not in firefox_editions | community.general.json_query('[].channel') )
          - ( "firefox-nightly" not in firefox_editions | community.general.json_query('[].path') )
          - ( "firefox-nightly" not in firefox_editions | community.general.json_query('[].script') )
          - ( "firefox-nightly-latest" not in firefox_editions | community.general.json_query('[].product') )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: firefox_nightly_apt | bool

    - name: Include apt role local fact tasks if variables are not defined
      ansible.builtin.include_role:
        name: apt
        tasks_from: local_facts.yml
      when: >-
        ( ansible_local.dpkg.arch is not defined ) or
        ( ansible_local.gpg.version is not defined ) or
        ( ansible_local.bash.path is not defined )

    - name: GNUPG present
      ansible.builtin.apt:
        pkg:
          - gnupg
        state: present
        update_cache: true

    - name: Include the Firefox apt repo tasks
      ansible.builtin.include_tasks: apt.yml
      when: firefox_nightly_apt | bool

    - name: Mozilla Software Releases GPG key present
      ansible.builtin.copy:
        src: 61B7B526D98F0353.asc
        dest: /root/61B7B526D98F0353.asc
        mode: "0600"

    - name: Mozilla Software Releases GPG key imported
      ansible.builtin.command: gpg --import /root/61B7B526D98F0353.asc
      register: firefox_gpg_import
      changed_when: ( "unchanged" not in firefox_gpg_import.stderr )

    - name: Debug GPG key import  # noqa: no-handler
      ansible.builtin.debug:
        var: firefox_gpg_import.stderr_lines
        verbosity: 2
      when: >-
        ( firefox_gpg_import.stderr_lines is defined ) and
        ( firefox_gpg_import.stderr_lines != [] ) and
        ( ( firefox_gpg_import.changed | bool ) or
        ( ( firefox_gpg_import.skipped is defined ) and
        ( not firefox_gpg_import.skipped | bool ) ) )

    - name: Download the Firefox versions JSON
      ansible.builtin.uri:
        url: https://product-details.mozilla.org/1.0/firefox_versions.json
        force: true
        return_content: true
        status_code:
          - 200
      check_mode: false
      changed_when: false
      register: firefox_versions

    - name: Debug Firefox versions type debug
      ansible.builtin.debug:
        msg: "{{ firefox_versions.json | type_debug }}"
        verbosity: 3

    - name: Debug Firefox versions JSON
      ansible.builtin.debug:
        var: firefox_versions.json
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Include tasks for each version of Firefox
      ansible.builtin.include_tasks: version.yml
      loop: "{{ firefox_editions }}"
      loop_control:
        loop_var: edition
        label: "{{ edition.script }}"

    - name: Include firejail tasks
      ansible.builtin.include_tasks: firejail.yml
      when: firefox_firejail | bool

    - name: Print the CHANGELOG
      ansible.builtin.debug:
        var: firefox_changelog
      when: firefox_changelog != []

  when: firefox | bool
  tags:
    - firefox
...
