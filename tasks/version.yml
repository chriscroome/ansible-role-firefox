---
- name: Check Firefox version
  block:

    - name: "Directory for downloads for {{ edition.name }} present"
      ansible.builtin.file:
        path: "{{ firefox_download }}/{{ edition.product }}"
        state: directory
        mode: 0700

    - name: "Check if {{ edition.name }} symlink is present"
      ansible.builtin.stat:
        path: "{{ firefox_bin }}/{{ edition.symlink }}"
        follow: true
      register: firefox_stat

    - name: "Debug {{ edition.name }} stat"
      ansible.builtin.debug:
        var: firefox_stat
        verbosity: 2

    - name: Check Firefox installed version
      block:

        - name: "Check installed version of {{ edition.name }}"
          ansible.builtin.command: "{{ firefox_bin }}/{{ edition.symlink }} --version"
          check_mode: false
          changed_when: false
          register: firefox_version

        - name: "Debug installed {{ edition.name }} version"
          ansible.builtin.debug:
            var: firefox_version
            verbosity: 2

        - name: "Set a variable for the version of {{ edition.name }} that is installed"
          ansible.builtin.set_fact:
            firefox_installed: "{{ firefox_version.stdout | regex_replace('^Mozilla Firefox ') }}"

      when: firefox_stat.stat.exists

    - name: "Set a fact for the JSON version variable for {{ edition.name }}"
      set_fact:
        firefox_latest: "{{ line.value }}"
      when: line.key == edition.version
      loop: "{{ firefox_versions.json | dict2items }}"
      loop_control:
        loop_var: line

    - name: "Debug latest {{ edition.name }} version"
      debug:
        var: firefox_latest
        verbosity: 2

    - name: "Append a CHANGELOG message to say that {{ edition.name }} is already the latest version"
      set_fact:
        firefox_changelog: "{{ firefox_changelog }} + [ 'The installed {{ edition.name }} {{ firefox_installed }} is the latest version' ]"
      when:
        - firefox_stat.stat.exists
        - firefox_installed is version(firefox_latest, '>=')
        - ansible_verbosity > 0

    - name: "Download and install {{ edition.name }}"
      include_tasks: download.yml
      when: >
        ( not firefox_stat.stat.exists ) or
        ( firefox_installed is version(firefox_latest, '<') )

  tags:
    - firefox
...
