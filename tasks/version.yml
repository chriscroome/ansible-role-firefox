---
- name: Check Firefox version
  block:

    - name: "Check if {{ edition.name }} is present"
      ansible.builtin.stat:
        path: "{{ firefox_path }}/{{ edition.path }}/firefox"
        follow: true
      register: firefox_stat

    - name: "Debug {{ edition.name }} stat"
      ansible.builtin.debug:
        var: firefox_stat
        verbosity: 2

    - name: Check Firefox installed version
      block:

        - name: "Check installed version of {{ edition.name }}"
          ansible.builtin.command: "{{ firefox_path }}/{{ edition.path }}/firefox --version"
          check_mode: false
          changed_when: false
          register: firefox_version

        - name: "Debug installed {{ edition.name }} version"
          ansible.builtin.debug:
            var: firefox_version
            verbosity: 2

        - name: "Set a variable for the version of {{ edition.name }} that is installed"
          ansible.builtin.set_fact:
            firefox_installed: "{{ firefox_version.stdout | regex_replace('^Mozilla Firefox ') }}"

      when: firefox_stat.stat.exists | bool

    - name: "Set a fact for the JSON version variable for {{ edition.name }}"
      ansible.builtin.set_fact:
        firefox_latest: "{{ firefox_versions.json | community.general.json_query(edition.version) }}"

    - name: "Debug latest {{ edition.name }} version"
      ansible.builtin.debug:
        var: firefox_latest
        verbosity: 2

    - name: Update the CHANGELOG message
      block:

        - name: "Append a CHANGELOG message to say that {{ edition.name }} is already the latest version for Ansible < 2.13.0"
          ansible.builtin.set_fact:
            firefox_changelog: "{{ firefox_changelog }} + ['{{ firefox_changelog_msg }}']"
          when:
            - ansible_version.full is version('2.13.0', '<')

        - name: "Append a CHANGELOG message to say that {{ edition.name }} is already the latest version for Ansible >= 2.13.0"
          ansible.builtin.set_fact:
            firefox_changelog: "{{ firefox_changelog + [firefox_changelog_msg] }}"
          when:
            - ansible_version.full is version('2.13.0', '>=')

      vars:
        firefox_changelog_msg: "{{ edition.name }} version {{ firefox_installed }} is already the latest version."
      when:
        - firefox_stat.stat.exists | bool
        - firefox_installed is version(firefox_latest, '>=')

    - name: "Download and install {{ edition.name }}"
      ansible.builtin.include_tasks: download.yml
      when: >-
        ( not firefox_stat.stat.exists | bool ) or
        ( firefox_installed is version(firefox_latest, '<') ) or
        ( edition.product == "firefox-nightly-latest" )

  tags:
    - firefox
...
