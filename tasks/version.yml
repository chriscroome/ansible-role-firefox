---
- name: Check Firefox version
  block:

    - name: "Directory for downloads for {{ edition.name }} present"
      ansible.builtin.file:
        path: "{{ firefox_download }}/{{ edition.product }}"
        state: directory
        mode: 0700

    - name: "Check if {{ edition.name }} symlink is present"
      ansible.builtin.stat:
        path: "{{ firefox_bin }}/{{ edition.symlink }}"
        follow: true
      register: firefox_stat

    - name: "Debug {{ edition.name }} stat"
      ansible.builtin.debug:
        var: firefox_stat
        verbosity: 2

    - name: Check Firefox installed version
      block:

        - name: "Check installed version of {{ edition.name }}"
          ansible.builtin.command: "{{ firefox_bin }}/{{ edition.symlink }} --version"
          check_mode: false
          changed_when: false
          register: firefox_version

        - name: "Debug installed {{ edition.name }} version"
          ansible.builtin.debug:
            var: firefox_version
            verbosity: 2

        - name: "Set a variable for the version of {{ edition.name }} that is installed"
          ansible.builtin.set_fact:
            firefox_installed: "{{ firefox_version.stdout | regex_replace('^Mozilla Firefox ') }}"

      when: firefox_stat.stat.exists

    - name: "Check URL for {{ edition.name }}"
      ansible.builtin.uri:
        url: "https://download.mozilla.org/?product={{ edition.product }}&os={{ firefox_arch }}&lang={{ firefox_lang }}"
        method: HEAD
        status_code: 302
        follow_redirects: none
      check_mode: false
      changed_when: false
      register: firefox_head

    - name: "Debug HEAD request for URL for {{ edition.name }}"
      ansible.builtin.debug:
        var: firefox_head
        verbosity: 2

    - name: "Set a fact for the latest {{ edition.name }} available"
      ansible.builtin.set_fact:
        firefox_latest: "{{ firefox_head.location | basename | splitext | first | splitext | first | regex_replace('^firefox-') }}"

    # Nightly includes lang and arch in the filename, eg firefox-98.0a1.en-GB.linux-x86_64.tar.bz2
    - name: "Set a fact for the latest {{ edition.name }} available"
      ansible.builtin.set_fact:
        firefox_latest: "{{ firefox_latest | basename | splitext | first | splitext | first}}"
      when: edition.product == "firefox-nightly-latest"

    - name: Download and install Firefox
      include_tasks: download.yml
      when: >
        ( not firefox_stat.stat.exists ) or
        ( firefox_installed is version(firefox_latest, '<') )

  tags:
    - firefox
...
